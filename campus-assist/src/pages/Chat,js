// Chat.js

import React, { useState, useEffect, useContext } from 'react';
import { AuthContext } from '../AuthContext'; // Import the AuthContext
import io from 'socket.io-client';

const Chat = () => {
  const { currentUser } = useContext(AuthContext);
  const [messages, setMessages] = useState([]);
  const [messageInput, setMessageInput] = useState('');
  const [socket, setSocket] = useState(null);

  useEffect(() => {
    // Connect to the socket server
    const newSocket = io('http://localhost:3000'); // Change URL to match your backend server
    setSocket(newSocket);

    // Listen for incoming messages
    newSocket.on('message', (message) => {
      setMessages((prevMessages) => [...prevMessages, message]);
    });

    return () => {
      // Disconnect socket when component unmounts
      newSocket.disconnect();
    };
  }, []);

  const sendMessage = () => {
    if (socket && messageInput.trim() !== '') {
      // Emit message to the server
      socket.emit('message', { text: messageInput, sender: currentUser.email });
      setMessageInput('');
    }
  };

  return (
    <div>
      <h1>Chat</h1>
      <div>
        {messages.map((message, index) => (
          <div key={index}>
            <strong>{message.sender}</strong>: {message.text}
          </div>
        ))}
      </div>
      <input
        type="text"
        value={messageInput}
        onChange={(e) => setMessageInput(e.target.value)}
        placeholder="Type your message..."
      />
      <button onClick={sendMessage}>Send</button>
    </div>
  );
};

export default Chat;
